// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stringdb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "stringdb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace stringdb {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_RequestRead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_RequestRead_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_RequestRead_RequestReadData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_RequestRead_RequestReadData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_RequestWrite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_RequestWrite_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_RequestWrite_RequestWriteData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_RequestWrite_RequestWriteData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_RequestWrite_RequestWriteData_AttributeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_RequestWrite_RequestWriteData_AttributeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ResponseRead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ResponseRead_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ResponseRead_ResponseReadData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ResponseRead_ResponseReadData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ResponseRead_ResponseReadData_AttributeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ResponseRead_ResponseReadData_AttributeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ResponseWrite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ResponseWrite_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ResponseWrite_ResponseWriteData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ResponseWrite_ResponseWriteData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ResponseWrite_ResponseWriteData_WriteData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ResponseWrite_ResponseWriteData_WriteData_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RequestAndResponseType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_stringdb_2eproto() {
  protobuf_AddDesc_stringdb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "stringdb.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, request_read_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, request_write_),
  };
  Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request));
  Request_RequestRead_descriptor_ = Request_descriptor_->nested_type(0);
  static const int Request_RequestRead_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead, request_read_data_),
  };
  Request_RequestRead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_RequestRead_descriptor_,
      Request_RequestRead::default_instance_,
      Request_RequestRead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request_RequestRead));
  Request_RequestRead_RequestReadData_descriptor_ = Request_RequestRead_descriptor_->nested_type(0);
  static const int Request_RequestRead_RequestReadData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead_RequestReadData, application_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead_RequestReadData, attribute_id_),
  };
  Request_RequestRead_RequestReadData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_RequestRead_RequestReadData_descriptor_,
      Request_RequestRead_RequestReadData::default_instance_,
      Request_RequestRead_RequestReadData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead_RequestReadData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestRead_RequestReadData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request_RequestRead_RequestReadData));
  Request_RequestWrite_descriptor_ = Request_descriptor_->nested_type(1);
  static const int Request_RequestWrite_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite, request_write_data_),
  };
  Request_RequestWrite_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_RequestWrite_descriptor_,
      Request_RequestWrite::default_instance_,
      Request_RequestWrite_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request_RequestWrite));
  Request_RequestWrite_RequestWriteData_descriptor_ = Request_RequestWrite_descriptor_->nested_type(0);
  static const int Request_RequestWrite_RequestWriteData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData, application_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData, attribute_data_),
  };
  Request_RequestWrite_RequestWriteData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_RequestWrite_RequestWriteData_descriptor_,
      Request_RequestWrite_RequestWriteData::default_instance_,
      Request_RequestWrite_RequestWriteData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request_RequestWrite_RequestWriteData));
  Request_RequestWrite_RequestWriteData_AttributeData_descriptor_ = Request_RequestWrite_RequestWriteData_descriptor_->nested_type(0);
  static const int Request_RequestWrite_RequestWriteData_AttributeData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData_AttributeData, attribute_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData_AttributeData, attribute_value_),
  };
  Request_RequestWrite_RequestWriteData_AttributeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_RequestWrite_RequestWriteData_AttributeData_descriptor_,
      Request_RequestWrite_RequestWriteData_AttributeData::default_instance_,
      Request_RequestWrite_RequestWriteData_AttributeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData_AttributeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_RequestWrite_RequestWriteData_AttributeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request_RequestWrite_RequestWriteData_AttributeData));
  Response_descriptor_ = file->message_type(1);
  static const int Response_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, response_read_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, response_write_),
  };
  Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response));
  Response_ResponseRead_descriptor_ = Response_descriptor_->nested_type(0);
  static const int Response_ResponseRead_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead, response_read_data_),
  };
  Response_ResponseRead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_ResponseRead_descriptor_,
      Response_ResponseRead::default_instance_,
      Response_ResponseRead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response_ResponseRead));
  Response_ResponseRead_ResponseReadData_descriptor_ = Response_ResponseRead_descriptor_->nested_type(0);
  static const int Response_ResponseRead_ResponseReadData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData, application_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData, attribute_data_),
  };
  Response_ResponseRead_ResponseReadData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_ResponseRead_ResponseReadData_descriptor_,
      Response_ResponseRead_ResponseReadData::default_instance_,
      Response_ResponseRead_ResponseReadData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response_ResponseRead_ResponseReadData));
  Response_ResponseRead_ResponseReadData_AttributeData_descriptor_ = Response_ResponseRead_ResponseReadData_descriptor_->nested_type(0);
  static const int Response_ResponseRead_ResponseReadData_AttributeData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData_AttributeData, attribute_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData_AttributeData, attribute_value_),
  };
  Response_ResponseRead_ResponseReadData_AttributeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_ResponseRead_ResponseReadData_AttributeData_descriptor_,
      Response_ResponseRead_ResponseReadData_AttributeData::default_instance_,
      Response_ResponseRead_ResponseReadData_AttributeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData_AttributeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseRead_ResponseReadData_AttributeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response_ResponseRead_ResponseReadData_AttributeData));
  Response_ResponseWrite_descriptor_ = Response_descriptor_->nested_type(1);
  static const int Response_ResponseWrite_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite, response_write_data_),
  };
  Response_ResponseWrite_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_ResponseWrite_descriptor_,
      Response_ResponseWrite::default_instance_,
      Response_ResponseWrite_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response_ResponseWrite));
  Response_ResponseWrite_ResponseWriteData_descriptor_ = Response_ResponseWrite_descriptor_->nested_type(0);
  static const int Response_ResponseWrite_ResponseWriteData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData, application_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData, write_data_),
  };
  Response_ResponseWrite_ResponseWriteData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_ResponseWrite_ResponseWriteData_descriptor_,
      Response_ResponseWrite_ResponseWriteData::default_instance_,
      Response_ResponseWrite_ResponseWriteData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response_ResponseWrite_ResponseWriteData));
  Response_ResponseWrite_ResponseWriteData_WriteData_descriptor_ = Response_ResponseWrite_ResponseWriteData_descriptor_->nested_type(0);
  static const int Response_ResponseWrite_ResponseWriteData_WriteData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData_WriteData, attribute_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData_WriteData, error_number_),
  };
  Response_ResponseWrite_ResponseWriteData_WriteData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_ResponseWrite_ResponseWriteData_WriteData_descriptor_,
      Response_ResponseWrite_ResponseWriteData_WriteData::default_instance_,
      Response_ResponseWrite_ResponseWriteData_WriteData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData_WriteData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ResponseWrite_ResponseWriteData_WriteData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response_ResponseWrite_ResponseWriteData_WriteData));
  RequestAndResponseType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_stringdb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_RequestRead_descriptor_, &Request_RequestRead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_RequestRead_RequestReadData_descriptor_, &Request_RequestRead_RequestReadData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_RequestWrite_descriptor_, &Request_RequestWrite::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_RequestWrite_RequestWriteData_descriptor_, &Request_RequestWrite_RequestWriteData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_RequestWrite_RequestWriteData_AttributeData_descriptor_, &Request_RequestWrite_RequestWriteData_AttributeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_ResponseRead_descriptor_, &Response_ResponseRead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_ResponseRead_ResponseReadData_descriptor_, &Response_ResponseRead_ResponseReadData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_ResponseRead_ResponseReadData_AttributeData_descriptor_, &Response_ResponseRead_ResponseReadData_AttributeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_ResponseWrite_descriptor_, &Response_ResponseWrite::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_ResponseWrite_ResponseWriteData_descriptor_, &Response_ResponseWrite_ResponseWriteData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_ResponseWrite_ResponseWriteData_WriteData_descriptor_, &Response_ResponseWrite_ResponseWriteData_WriteData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_stringdb_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Request_RequestRead::default_instance_;
  delete Request_RequestRead_reflection_;
  delete Request_RequestRead_RequestReadData::default_instance_;
  delete Request_RequestRead_RequestReadData_reflection_;
  delete Request_RequestWrite::default_instance_;
  delete Request_RequestWrite_reflection_;
  delete Request_RequestWrite_RequestWriteData::default_instance_;
  delete Request_RequestWrite_RequestWriteData_reflection_;
  delete Request_RequestWrite_RequestWriteData_AttributeData::default_instance_;
  delete Request_RequestWrite_RequestWriteData_AttributeData_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Response_ResponseRead::default_instance_;
  delete Response_ResponseRead_reflection_;
  delete Response_ResponseRead_ResponseReadData::default_instance_;
  delete Response_ResponseRead_ResponseReadData_reflection_;
  delete Response_ResponseRead_ResponseReadData_AttributeData::default_instance_;
  delete Response_ResponseRead_ResponseReadData_AttributeData_reflection_;
  delete Response_ResponseWrite::default_instance_;
  delete Response_ResponseWrite_reflection_;
  delete Response_ResponseWrite_ResponseWriteData::default_instance_;
  delete Response_ResponseWrite_ResponseWriteData_reflection_;
  delete Response_ResponseWrite_ResponseWriteData_WriteData::default_instance_;
  delete Response_ResponseWrite_ResponseWriteData_WriteData_reflection_;
}

void protobuf_AddDesc_stringdb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016stringdb.proto\022\010stringdb\"\342\004\n\007Request\022."
    "\n\004type\030\001 \002(\0162 .stringdb.RequestAndRespon"
    "seType\0223\n\014request_read\030\025 \001(\0132\035.stringdb."
    "Request.RequestRead\0225\n\rrequest_write\030\026 \001"
    "(\0132\036.stringdb.Request.RequestWrite\032\230\001\n\013R"
    "equestRead\022H\n\021request_read_data\030\025 \001(\0132-."
    "stringdb.Request.RequestRead.RequestRead"
    "Data\032\?\n\017RequestReadData\022\026\n\016application_i"
    "d\030\001 \002(\005\022\024\n\014attribute_id\030\003 \003(\005\032\237\002\n\014Reques"
    "tWrite\022K\n\022request_write_data\030\025 \001(\0132/.str"
    "ingdb.Request.RequestWrite.RequestWriteD"
    "ata\032\301\001\n\020RequestWriteData\022\026\n\016application_"
    "id\030\001 \002(\005\022U\n\016attribute_data\030\025 \003(\0132=.strin"
    "gdb.Request.RequestWrite.RequestWriteDat"
    "a.AttributeData\032>\n\rAttributeData\022\024\n\014attr"
    "ibute_id\030\001 \002(\005\022\027\n\017attribute_value\030\002 \002(\t\""
    "\354\005\n\010Response\022.\n\004type\030\001 \002(\0162 .stringdb.Re"
    "questAndResponseType\0226\n\rresponse_read\030\025 "
    "\001(\0132\037.stringdb.Response.ResponseRead\0228\n\016"
    "response_write\030\026 \001(\0132 .stringdb.Response"
    ".ResponseWrite\032\241\002\n\014ResponseRead\022L\n\022respo"
    "nse_read_data\030\025 \001(\01320.stringdb.Response."
    "ResponseRead.ResponseReadData\032\302\001\n\020Respon"
    "seReadData\022\026\n\016application_id\030\001 \002(\005\022V\n\016at"
    "tribute_data\030\025 \003(\0132>.stringdb.Response.R"
    "esponseRead.ResponseReadData.AttributeDa"
    "ta\032>\n\rAttributeData\022\024\n\014attribute_id\030\001 \002("
    "\005\022\027\n\017attribute_value\030\002 \002(\t\032\231\002\n\rResponseW"
    "rite\022O\n\023response_write_data\030\025 \001(\01322.stri"
    "ngdb.Response.ResponseWrite.ResponseWrit"
    "eData\032\266\001\n\021ResponseWriteData\022\026\n\016applicati"
    "on_id\030\001 \002(\005\022P\n\nwrite_data\030\025 \003(\0132<.string"
    "db.Response.ResponseWrite.ResponseWriteD"
    "ata.WriteData\0327\n\tWriteData\022\024\n\014attribute_"
    "id\030\001 \002(\005\022\024\n\014error_number\030\002 \002(\005*-\n\026Reques"
    "tAndResponseType\022\010\n\004READ\020\001\022\t\n\005WRITE\020\002", 1437);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "stringdb.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  Request_RequestRead::default_instance_ = new Request_RequestRead();
  Request_RequestRead_RequestReadData::default_instance_ = new Request_RequestRead_RequestReadData();
  Request_RequestWrite::default_instance_ = new Request_RequestWrite();
  Request_RequestWrite_RequestWriteData::default_instance_ = new Request_RequestWrite_RequestWriteData();
  Request_RequestWrite_RequestWriteData_AttributeData::default_instance_ = new Request_RequestWrite_RequestWriteData_AttributeData();
  Response::default_instance_ = new Response();
  Response_ResponseRead::default_instance_ = new Response_ResponseRead();
  Response_ResponseRead_ResponseReadData::default_instance_ = new Response_ResponseRead_ResponseReadData();
  Response_ResponseRead_ResponseReadData_AttributeData::default_instance_ = new Response_ResponseRead_ResponseReadData_AttributeData();
  Response_ResponseWrite::default_instance_ = new Response_ResponseWrite();
  Response_ResponseWrite_ResponseWriteData::default_instance_ = new Response_ResponseWrite_ResponseWriteData();
  Response_ResponseWrite_ResponseWriteData_WriteData::default_instance_ = new Response_ResponseWrite_ResponseWriteData_WriteData();
  Request::default_instance_->InitAsDefaultInstance();
  Request_RequestRead::default_instance_->InitAsDefaultInstance();
  Request_RequestRead_RequestReadData::default_instance_->InitAsDefaultInstance();
  Request_RequestWrite::default_instance_->InitAsDefaultInstance();
  Request_RequestWrite_RequestWriteData::default_instance_->InitAsDefaultInstance();
  Request_RequestWrite_RequestWriteData_AttributeData::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Response_ResponseRead::default_instance_->InitAsDefaultInstance();
  Response_ResponseRead_ResponseReadData::default_instance_->InitAsDefaultInstance();
  Response_ResponseRead_ResponseReadData_AttributeData::default_instance_->InitAsDefaultInstance();
  Response_ResponseWrite::default_instance_->InitAsDefaultInstance();
  Response_ResponseWrite_ResponseWriteData::default_instance_->InitAsDefaultInstance();
  Response_ResponseWrite_ResponseWriteData_WriteData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_stringdb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_stringdb_2eproto {
  StaticDescriptorInitializer_stringdb_2eproto() {
    protobuf_AddDesc_stringdb_2eproto();
  }
} static_descriptor_initializer_stringdb_2eproto_;
const ::google::protobuf::EnumDescriptor* RequestAndResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestAndResponseType_descriptor_;
}
bool RequestAndResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Request_RequestRead_RequestReadData::kApplicationIdFieldNumber;
const int Request_RequestRead_RequestReadData::kAttributeIdFieldNumber;
#endif  // !_MSC_VER

Request_RequestRead_RequestReadData::Request_RequestRead_RequestReadData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request_RequestRead_RequestReadData::InitAsDefaultInstance() {
}

Request_RequestRead_RequestReadData::Request_RequestRead_RequestReadData(const Request_RequestRead_RequestReadData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request_RequestRead_RequestReadData::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_RequestRead_RequestReadData::~Request_RequestRead_RequestReadData() {
  SharedDtor();
}

void Request_RequestRead_RequestReadData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Request_RequestRead_RequestReadData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_RequestRead_RequestReadData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestRead_RequestReadData_descriptor_;
}

const Request_RequestRead_RequestReadData& Request_RequestRead_RequestReadData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Request_RequestRead_RequestReadData* Request_RequestRead_RequestReadData::default_instance_ = NULL;

Request_RequestRead_RequestReadData* Request_RequestRead_RequestReadData::New() const {
  return new Request_RequestRead_RequestReadData;
}

void Request_RequestRead_RequestReadData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    application_id_ = 0;
  }
  attribute_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request_RequestRead_RequestReadData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &application_id_)));
          set_has_application_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attribute_id;
        break;
      }

      // repeated int32 attribute_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attribute_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_attribute_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attribute_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attribute_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request_RequestRead_RequestReadData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->application_id(), output);
  }

  // repeated int32 attribute_id = 3;
  for (int i = 0; i < this->attribute_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->attribute_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request_RequestRead_RequestReadData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->application_id(), target);
  }

  // repeated int32 attribute_id = 3;
  for (int i = 0; i < this->attribute_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->attribute_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request_RequestRead_RequestReadData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->application_id());
    }

  }
  // repeated int32 attribute_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->attribute_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->attribute_id(i));
    }
    total_size += 1 * this->attribute_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_RequestRead_RequestReadData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request_RequestRead_RequestReadData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request_RequestRead_RequestReadData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request_RequestRead_RequestReadData::MergeFrom(const Request_RequestRead_RequestReadData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_id_.MergeFrom(from.attribute_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      set_application_id(from.application_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request_RequestRead_RequestReadData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_RequestRead_RequestReadData::CopyFrom(const Request_RequestRead_RequestReadData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_RequestRead_RequestReadData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Request_RequestRead_RequestReadData::Swap(Request_RequestRead_RequestReadData* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    attribute_id_.Swap(&other->attribute_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request_RequestRead_RequestReadData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_RequestRead_RequestReadData_descriptor_;
  metadata.reflection = Request_RequestRead_RequestReadData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Request_RequestRead::kRequestReadDataFieldNumber;
#endif  // !_MSC_VER

Request_RequestRead::Request_RequestRead()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request_RequestRead::InitAsDefaultInstance() {
  request_read_data_ = const_cast< ::stringdb::Request_RequestRead_RequestReadData*>(&::stringdb::Request_RequestRead_RequestReadData::default_instance());
}

Request_RequestRead::Request_RequestRead(const Request_RequestRead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request_RequestRead::SharedCtor() {
  _cached_size_ = 0;
  request_read_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_RequestRead::~Request_RequestRead() {
  SharedDtor();
}

void Request_RequestRead::SharedDtor() {
  if (this != default_instance_) {
    delete request_read_data_;
  }
}

void Request_RequestRead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_RequestRead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestRead_descriptor_;
}

const Request_RequestRead& Request_RequestRead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Request_RequestRead* Request_RequestRead::default_instance_ = NULL;

Request_RequestRead* Request_RequestRead::New() const {
  return new Request_RequestRead;
}

void Request_RequestRead::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request_read_data()) {
      if (request_read_data_ != NULL) request_read_data_->::stringdb::Request_RequestRead_RequestReadData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request_RequestRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .stringdb.Request.RequestRead.RequestReadData request_read_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_read_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request_RequestRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .stringdb.Request.RequestRead.RequestReadData request_read_data = 21;
  if (has_request_read_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->request_read_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request_RequestRead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .stringdb.Request.RequestRead.RequestReadData request_read_data = 21;
  if (has_request_read_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->request_read_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request_RequestRead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .stringdb.Request.RequestRead.RequestReadData request_read_data = 21;
    if (has_request_read_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request_read_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_RequestRead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request_RequestRead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request_RequestRead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request_RequestRead::MergeFrom(const Request_RequestRead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request_read_data()) {
      mutable_request_read_data()->::stringdb::Request_RequestRead_RequestReadData::MergeFrom(from.request_read_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request_RequestRead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_RequestRead::CopyFrom(const Request_RequestRead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_RequestRead::IsInitialized() const {

  if (has_request_read_data()) {
    if (!this->request_read_data().IsInitialized()) return false;
  }
  return true;
}

void Request_RequestRead::Swap(Request_RequestRead* other) {
  if (other != this) {
    std::swap(request_read_data_, other->request_read_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request_RequestRead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_RequestRead_descriptor_;
  metadata.reflection = Request_RequestRead_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Request_RequestWrite_RequestWriteData_AttributeData::kAttributeIdFieldNumber;
const int Request_RequestWrite_RequestWriteData_AttributeData::kAttributeValueFieldNumber;
#endif  // !_MSC_VER

Request_RequestWrite_RequestWriteData_AttributeData::Request_RequestWrite_RequestWriteData_AttributeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request_RequestWrite_RequestWriteData_AttributeData::InitAsDefaultInstance() {
}

Request_RequestWrite_RequestWriteData_AttributeData::Request_RequestWrite_RequestWriteData_AttributeData(const Request_RequestWrite_RequestWriteData_AttributeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request_RequestWrite_RequestWriteData_AttributeData::SharedCtor() {
  _cached_size_ = 0;
  attribute_id_ = 0;
  attribute_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_RequestWrite_RequestWriteData_AttributeData::~Request_RequestWrite_RequestWriteData_AttributeData() {
  SharedDtor();
}

void Request_RequestWrite_RequestWriteData_AttributeData::SharedDtor() {
  if (attribute_value_ != &::google::protobuf::internal::kEmptyString) {
    delete attribute_value_;
  }
  if (this != default_instance_) {
  }
}

void Request_RequestWrite_RequestWriteData_AttributeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_RequestWrite_RequestWriteData_AttributeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestWrite_RequestWriteData_AttributeData_descriptor_;
}

const Request_RequestWrite_RequestWriteData_AttributeData& Request_RequestWrite_RequestWriteData_AttributeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Request_RequestWrite_RequestWriteData_AttributeData* Request_RequestWrite_RequestWriteData_AttributeData::default_instance_ = NULL;

Request_RequestWrite_RequestWriteData_AttributeData* Request_RequestWrite_RequestWriteData_AttributeData::New() const {
  return new Request_RequestWrite_RequestWriteData_AttributeData;
}

void Request_RequestWrite_RequestWriteData_AttributeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    attribute_id_ = 0;
    if (has_attribute_value()) {
      if (attribute_value_ != &::google::protobuf::internal::kEmptyString) {
        attribute_value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request_RequestWrite_RequestWriteData_AttributeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 attribute_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attribute_id_)));
          set_has_attribute_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attribute_value;
        break;
      }

      // required string attribute_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attribute_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->attribute_value().data(), this->attribute_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request_RequestWrite_RequestWriteData_AttributeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 attribute_id = 1;
  if (has_attribute_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attribute_id(), output);
  }

  // required string attribute_value = 2;
  if (has_attribute_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attribute_value().data(), this->attribute_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->attribute_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request_RequestWrite_RequestWriteData_AttributeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 attribute_id = 1;
  if (has_attribute_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attribute_id(), target);
  }

  // required string attribute_value = 2;
  if (has_attribute_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attribute_value().data(), this->attribute_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->attribute_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request_RequestWrite_RequestWriteData_AttributeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 attribute_id = 1;
    if (has_attribute_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attribute_id());
    }

    // required string attribute_value = 2;
    if (has_attribute_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attribute_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_RequestWrite_RequestWriteData_AttributeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request_RequestWrite_RequestWriteData_AttributeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request_RequestWrite_RequestWriteData_AttributeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request_RequestWrite_RequestWriteData_AttributeData::MergeFrom(const Request_RequestWrite_RequestWriteData_AttributeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attribute_id()) {
      set_attribute_id(from.attribute_id());
    }
    if (from.has_attribute_value()) {
      set_attribute_value(from.attribute_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request_RequestWrite_RequestWriteData_AttributeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_RequestWrite_RequestWriteData_AttributeData::CopyFrom(const Request_RequestWrite_RequestWriteData_AttributeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_RequestWrite_RequestWriteData_AttributeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Request_RequestWrite_RequestWriteData_AttributeData::Swap(Request_RequestWrite_RequestWriteData_AttributeData* other) {
  if (other != this) {
    std::swap(attribute_id_, other->attribute_id_);
    std::swap(attribute_value_, other->attribute_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request_RequestWrite_RequestWriteData_AttributeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_RequestWrite_RequestWriteData_AttributeData_descriptor_;
  metadata.reflection = Request_RequestWrite_RequestWriteData_AttributeData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Request_RequestWrite_RequestWriteData::kApplicationIdFieldNumber;
const int Request_RequestWrite_RequestWriteData::kAttributeDataFieldNumber;
#endif  // !_MSC_VER

Request_RequestWrite_RequestWriteData::Request_RequestWrite_RequestWriteData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request_RequestWrite_RequestWriteData::InitAsDefaultInstance() {
}

Request_RequestWrite_RequestWriteData::Request_RequestWrite_RequestWriteData(const Request_RequestWrite_RequestWriteData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request_RequestWrite_RequestWriteData::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_RequestWrite_RequestWriteData::~Request_RequestWrite_RequestWriteData() {
  SharedDtor();
}

void Request_RequestWrite_RequestWriteData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Request_RequestWrite_RequestWriteData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_RequestWrite_RequestWriteData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestWrite_RequestWriteData_descriptor_;
}

const Request_RequestWrite_RequestWriteData& Request_RequestWrite_RequestWriteData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Request_RequestWrite_RequestWriteData* Request_RequestWrite_RequestWriteData::default_instance_ = NULL;

Request_RequestWrite_RequestWriteData* Request_RequestWrite_RequestWriteData::New() const {
  return new Request_RequestWrite_RequestWriteData;
}

void Request_RequestWrite_RequestWriteData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    application_id_ = 0;
  }
  attribute_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request_RequestWrite_RequestWriteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &application_id_)));
          set_has_application_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_attribute_data;
        break;
      }

      // repeated .stringdb.Request.RequestWrite.RequestWriteData.AttributeData attribute_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_attribute_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request_RequestWrite_RequestWriteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->application_id(), output);
  }

  // repeated .stringdb.Request.RequestWrite.RequestWriteData.AttributeData attribute_data = 21;
  for (int i = 0; i < this->attribute_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->attribute_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request_RequestWrite_RequestWriteData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->application_id(), target);
  }

  // repeated .stringdb.Request.RequestWrite.RequestWriteData.AttributeData attribute_data = 21;
  for (int i = 0; i < this->attribute_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->attribute_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request_RequestWrite_RequestWriteData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->application_id());
    }

  }
  // repeated .stringdb.Request.RequestWrite.RequestWriteData.AttributeData attribute_data = 21;
  total_size += 2 * this->attribute_data_size();
  for (int i = 0; i < this->attribute_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_RequestWrite_RequestWriteData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request_RequestWrite_RequestWriteData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request_RequestWrite_RequestWriteData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request_RequestWrite_RequestWriteData::MergeFrom(const Request_RequestWrite_RequestWriteData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_data_.MergeFrom(from.attribute_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      set_application_id(from.application_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request_RequestWrite_RequestWriteData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_RequestWrite_RequestWriteData::CopyFrom(const Request_RequestWrite_RequestWriteData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_RequestWrite_RequestWriteData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < attribute_data_size(); i++) {
    if (!this->attribute_data(i).IsInitialized()) return false;
  }
  return true;
}

void Request_RequestWrite_RequestWriteData::Swap(Request_RequestWrite_RequestWriteData* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    attribute_data_.Swap(&other->attribute_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request_RequestWrite_RequestWriteData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_RequestWrite_RequestWriteData_descriptor_;
  metadata.reflection = Request_RequestWrite_RequestWriteData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Request_RequestWrite::kRequestWriteDataFieldNumber;
#endif  // !_MSC_VER

Request_RequestWrite::Request_RequestWrite()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request_RequestWrite::InitAsDefaultInstance() {
  request_write_data_ = const_cast< ::stringdb::Request_RequestWrite_RequestWriteData*>(&::stringdb::Request_RequestWrite_RequestWriteData::default_instance());
}

Request_RequestWrite::Request_RequestWrite(const Request_RequestWrite& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request_RequestWrite::SharedCtor() {
  _cached_size_ = 0;
  request_write_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_RequestWrite::~Request_RequestWrite() {
  SharedDtor();
}

void Request_RequestWrite::SharedDtor() {
  if (this != default_instance_) {
    delete request_write_data_;
  }
}

void Request_RequestWrite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_RequestWrite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestWrite_descriptor_;
}

const Request_RequestWrite& Request_RequestWrite::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Request_RequestWrite* Request_RequestWrite::default_instance_ = NULL;

Request_RequestWrite* Request_RequestWrite::New() const {
  return new Request_RequestWrite;
}

void Request_RequestWrite::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request_write_data()) {
      if (request_write_data_ != NULL) request_write_data_->::stringdb::Request_RequestWrite_RequestWriteData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request_RequestWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .stringdb.Request.RequestWrite.RequestWriteData request_write_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_write_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request_RequestWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .stringdb.Request.RequestWrite.RequestWriteData request_write_data = 21;
  if (has_request_write_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->request_write_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request_RequestWrite::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .stringdb.Request.RequestWrite.RequestWriteData request_write_data = 21;
  if (has_request_write_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->request_write_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request_RequestWrite::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .stringdb.Request.RequestWrite.RequestWriteData request_write_data = 21;
    if (has_request_write_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request_write_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_RequestWrite::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request_RequestWrite* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request_RequestWrite*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request_RequestWrite::MergeFrom(const Request_RequestWrite& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request_write_data()) {
      mutable_request_write_data()->::stringdb::Request_RequestWrite_RequestWriteData::MergeFrom(from.request_write_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request_RequestWrite::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_RequestWrite::CopyFrom(const Request_RequestWrite& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_RequestWrite::IsInitialized() const {

  if (has_request_write_data()) {
    if (!this->request_write_data().IsInitialized()) return false;
  }
  return true;
}

void Request_RequestWrite::Swap(Request_RequestWrite* other) {
  if (other != this) {
    std::swap(request_write_data_, other->request_write_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request_RequestWrite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_RequestWrite_descriptor_;
  metadata.reflection = Request_RequestWrite_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Request::kTypeFieldNumber;
const int Request::kRequestReadFieldNumber;
const int Request::kRequestWriteFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request::InitAsDefaultInstance() {
  request_read_ = const_cast< ::stringdb::Request_RequestRead*>(&::stringdb::Request_RequestRead::default_instance());
  request_write_ = const_cast< ::stringdb::Request_RequestWrite*>(&::stringdb::Request_RequestWrite::default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  request_read_ = NULL;
  request_write_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
    delete request_read_;
    delete request_write_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New() const {
  return new Request;
}

void Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    if (has_request_read()) {
      if (request_read_ != NULL) request_read_->::stringdb::Request_RequestRead::Clear();
    }
    if (has_request_write()) {
      if (request_write_ != NULL) request_write_->::stringdb::Request_RequestWrite::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .stringdb.RequestAndResponseType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::stringdb::RequestAndResponseType_IsValid(value)) {
            set_type(static_cast< ::stringdb::RequestAndResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_request_read;
        break;
      }

      // optional .stringdb.Request.RequestRead request_read = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_request_read:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_read()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_request_write;
        break;
      }

      // optional .stringdb.Request.RequestWrite request_write = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_request_write:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_write()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .stringdb.RequestAndResponseType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .stringdb.Request.RequestRead request_read = 21;
  if (has_request_read()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->request_read(), output);
  }

  // optional .stringdb.Request.RequestWrite request_write = 22;
  if (has_request_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->request_write(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .stringdb.RequestAndResponseType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .stringdb.Request.RequestRead request_read = 21;
  if (has_request_read()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->request_read(), target);
  }

  // optional .stringdb.Request.RequestWrite request_write = 22;
  if (has_request_write()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->request_write(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .stringdb.RequestAndResponseType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .stringdb.Request.RequestRead request_read = 21;
    if (has_request_read()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request_read());
    }

    // optional .stringdb.Request.RequestWrite request_write = 22;
    if (has_request_write()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request_write());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_request_read()) {
      mutable_request_read()->::stringdb::Request_RequestRead::MergeFrom(from.request_read());
    }
    if (from.has_request_write()) {
      mutable_request_write()->::stringdb::Request_RequestWrite::MergeFrom(from.request_write());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_request_read()) {
    if (!this->request_read().IsInitialized()) return false;
  }
  if (has_request_write()) {
    if (!this->request_write().IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(request_read_, other->request_read_);
    std::swap(request_write_, other->request_write_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Response_ResponseRead_ResponseReadData_AttributeData::kAttributeIdFieldNumber;
const int Response_ResponseRead_ResponseReadData_AttributeData::kAttributeValueFieldNumber;
#endif  // !_MSC_VER

Response_ResponseRead_ResponseReadData_AttributeData::Response_ResponseRead_ResponseReadData_AttributeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response_ResponseRead_ResponseReadData_AttributeData::InitAsDefaultInstance() {
}

Response_ResponseRead_ResponseReadData_AttributeData::Response_ResponseRead_ResponseReadData_AttributeData(const Response_ResponseRead_ResponseReadData_AttributeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response_ResponseRead_ResponseReadData_AttributeData::SharedCtor() {
  _cached_size_ = 0;
  attribute_id_ = 0;
  attribute_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ResponseRead_ResponseReadData_AttributeData::~Response_ResponseRead_ResponseReadData_AttributeData() {
  SharedDtor();
}

void Response_ResponseRead_ResponseReadData_AttributeData::SharedDtor() {
  if (attribute_value_ != &::google::protobuf::internal::kEmptyString) {
    delete attribute_value_;
  }
  if (this != default_instance_) {
  }
}

void Response_ResponseRead_ResponseReadData_AttributeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ResponseRead_ResponseReadData_AttributeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseRead_ResponseReadData_AttributeData_descriptor_;
}

const Response_ResponseRead_ResponseReadData_AttributeData& Response_ResponseRead_ResponseReadData_AttributeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response_ResponseRead_ResponseReadData_AttributeData* Response_ResponseRead_ResponseReadData_AttributeData::default_instance_ = NULL;

Response_ResponseRead_ResponseReadData_AttributeData* Response_ResponseRead_ResponseReadData_AttributeData::New() const {
  return new Response_ResponseRead_ResponseReadData_AttributeData;
}

void Response_ResponseRead_ResponseReadData_AttributeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    attribute_id_ = 0;
    if (has_attribute_value()) {
      if (attribute_value_ != &::google::protobuf::internal::kEmptyString) {
        attribute_value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response_ResponseRead_ResponseReadData_AttributeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 attribute_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attribute_id_)));
          set_has_attribute_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attribute_value;
        break;
      }

      // required string attribute_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attribute_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->attribute_value().data(), this->attribute_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response_ResponseRead_ResponseReadData_AttributeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 attribute_id = 1;
  if (has_attribute_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attribute_id(), output);
  }

  // required string attribute_value = 2;
  if (has_attribute_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attribute_value().data(), this->attribute_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->attribute_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response_ResponseRead_ResponseReadData_AttributeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 attribute_id = 1;
  if (has_attribute_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attribute_id(), target);
  }

  // required string attribute_value = 2;
  if (has_attribute_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attribute_value().data(), this->attribute_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->attribute_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response_ResponseRead_ResponseReadData_AttributeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 attribute_id = 1;
    if (has_attribute_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attribute_id());
    }

    // required string attribute_value = 2;
    if (has_attribute_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attribute_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ResponseRead_ResponseReadData_AttributeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response_ResponseRead_ResponseReadData_AttributeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ResponseRead_ResponseReadData_AttributeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ResponseRead_ResponseReadData_AttributeData::MergeFrom(const Response_ResponseRead_ResponseReadData_AttributeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attribute_id()) {
      set_attribute_id(from.attribute_id());
    }
    if (from.has_attribute_value()) {
      set_attribute_value(from.attribute_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response_ResponseRead_ResponseReadData_AttributeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ResponseRead_ResponseReadData_AttributeData::CopyFrom(const Response_ResponseRead_ResponseReadData_AttributeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ResponseRead_ResponseReadData_AttributeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Response_ResponseRead_ResponseReadData_AttributeData::Swap(Response_ResponseRead_ResponseReadData_AttributeData* other) {
  if (other != this) {
    std::swap(attribute_id_, other->attribute_id_);
    std::swap(attribute_value_, other->attribute_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response_ResponseRead_ResponseReadData_AttributeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ResponseRead_ResponseReadData_AttributeData_descriptor_;
  metadata.reflection = Response_ResponseRead_ResponseReadData_AttributeData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_ResponseRead_ResponseReadData::kApplicationIdFieldNumber;
const int Response_ResponseRead_ResponseReadData::kAttributeDataFieldNumber;
#endif  // !_MSC_VER

Response_ResponseRead_ResponseReadData::Response_ResponseRead_ResponseReadData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response_ResponseRead_ResponseReadData::InitAsDefaultInstance() {
}

Response_ResponseRead_ResponseReadData::Response_ResponseRead_ResponseReadData(const Response_ResponseRead_ResponseReadData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response_ResponseRead_ResponseReadData::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ResponseRead_ResponseReadData::~Response_ResponseRead_ResponseReadData() {
  SharedDtor();
}

void Response_ResponseRead_ResponseReadData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_ResponseRead_ResponseReadData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ResponseRead_ResponseReadData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseRead_ResponseReadData_descriptor_;
}

const Response_ResponseRead_ResponseReadData& Response_ResponseRead_ResponseReadData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response_ResponseRead_ResponseReadData* Response_ResponseRead_ResponseReadData::default_instance_ = NULL;

Response_ResponseRead_ResponseReadData* Response_ResponseRead_ResponseReadData::New() const {
  return new Response_ResponseRead_ResponseReadData;
}

void Response_ResponseRead_ResponseReadData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    application_id_ = 0;
  }
  attribute_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response_ResponseRead_ResponseReadData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &application_id_)));
          set_has_application_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_attribute_data;
        break;
      }

      // repeated .stringdb.Response.ResponseRead.ResponseReadData.AttributeData attribute_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_attribute_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response_ResponseRead_ResponseReadData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->application_id(), output);
  }

  // repeated .stringdb.Response.ResponseRead.ResponseReadData.AttributeData attribute_data = 21;
  for (int i = 0; i < this->attribute_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->attribute_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response_ResponseRead_ResponseReadData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->application_id(), target);
  }

  // repeated .stringdb.Response.ResponseRead.ResponseReadData.AttributeData attribute_data = 21;
  for (int i = 0; i < this->attribute_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->attribute_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response_ResponseRead_ResponseReadData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->application_id());
    }

  }
  // repeated .stringdb.Response.ResponseRead.ResponseReadData.AttributeData attribute_data = 21;
  total_size += 2 * this->attribute_data_size();
  for (int i = 0; i < this->attribute_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ResponseRead_ResponseReadData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response_ResponseRead_ResponseReadData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ResponseRead_ResponseReadData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ResponseRead_ResponseReadData::MergeFrom(const Response_ResponseRead_ResponseReadData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_data_.MergeFrom(from.attribute_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      set_application_id(from.application_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response_ResponseRead_ResponseReadData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ResponseRead_ResponseReadData::CopyFrom(const Response_ResponseRead_ResponseReadData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ResponseRead_ResponseReadData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < attribute_data_size(); i++) {
    if (!this->attribute_data(i).IsInitialized()) return false;
  }
  return true;
}

void Response_ResponseRead_ResponseReadData::Swap(Response_ResponseRead_ResponseReadData* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    attribute_data_.Swap(&other->attribute_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response_ResponseRead_ResponseReadData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ResponseRead_ResponseReadData_descriptor_;
  metadata.reflection = Response_ResponseRead_ResponseReadData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_ResponseRead::kResponseReadDataFieldNumber;
#endif  // !_MSC_VER

Response_ResponseRead::Response_ResponseRead()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response_ResponseRead::InitAsDefaultInstance() {
  response_read_data_ = const_cast< ::stringdb::Response_ResponseRead_ResponseReadData*>(&::stringdb::Response_ResponseRead_ResponseReadData::default_instance());
}

Response_ResponseRead::Response_ResponseRead(const Response_ResponseRead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response_ResponseRead::SharedCtor() {
  _cached_size_ = 0;
  response_read_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ResponseRead::~Response_ResponseRead() {
  SharedDtor();
}

void Response_ResponseRead::SharedDtor() {
  if (this != default_instance_) {
    delete response_read_data_;
  }
}

void Response_ResponseRead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ResponseRead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseRead_descriptor_;
}

const Response_ResponseRead& Response_ResponseRead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response_ResponseRead* Response_ResponseRead::default_instance_ = NULL;

Response_ResponseRead* Response_ResponseRead::New() const {
  return new Response_ResponseRead;
}

void Response_ResponseRead::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_response_read_data()) {
      if (response_read_data_ != NULL) response_read_data_->::stringdb::Response_ResponseRead_ResponseReadData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response_ResponseRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .stringdb.Response.ResponseRead.ResponseReadData response_read_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_read_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response_ResponseRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .stringdb.Response.ResponseRead.ResponseReadData response_read_data = 21;
  if (has_response_read_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->response_read_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response_ResponseRead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .stringdb.Response.ResponseRead.ResponseReadData response_read_data = 21;
  if (has_response_read_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->response_read_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response_ResponseRead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .stringdb.Response.ResponseRead.ResponseReadData response_read_data = 21;
    if (has_response_read_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response_read_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ResponseRead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response_ResponseRead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ResponseRead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ResponseRead::MergeFrom(const Response_ResponseRead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_read_data()) {
      mutable_response_read_data()->::stringdb::Response_ResponseRead_ResponseReadData::MergeFrom(from.response_read_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response_ResponseRead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ResponseRead::CopyFrom(const Response_ResponseRead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ResponseRead::IsInitialized() const {

  if (has_response_read_data()) {
    if (!this->response_read_data().IsInitialized()) return false;
  }
  return true;
}

void Response_ResponseRead::Swap(Response_ResponseRead* other) {
  if (other != this) {
    std::swap(response_read_data_, other->response_read_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response_ResponseRead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ResponseRead_descriptor_;
  metadata.reflection = Response_ResponseRead_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_ResponseWrite_ResponseWriteData_WriteData::kAttributeIdFieldNumber;
const int Response_ResponseWrite_ResponseWriteData_WriteData::kErrorNumberFieldNumber;
#endif  // !_MSC_VER

Response_ResponseWrite_ResponseWriteData_WriteData::Response_ResponseWrite_ResponseWriteData_WriteData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response_ResponseWrite_ResponseWriteData_WriteData::InitAsDefaultInstance() {
}

Response_ResponseWrite_ResponseWriteData_WriteData::Response_ResponseWrite_ResponseWriteData_WriteData(const Response_ResponseWrite_ResponseWriteData_WriteData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response_ResponseWrite_ResponseWriteData_WriteData::SharedCtor() {
  _cached_size_ = 0;
  attribute_id_ = 0;
  error_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ResponseWrite_ResponseWriteData_WriteData::~Response_ResponseWrite_ResponseWriteData_WriteData() {
  SharedDtor();
}

void Response_ResponseWrite_ResponseWriteData_WriteData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_ResponseWrite_ResponseWriteData_WriteData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ResponseWrite_ResponseWriteData_WriteData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseWrite_ResponseWriteData_WriteData_descriptor_;
}

const Response_ResponseWrite_ResponseWriteData_WriteData& Response_ResponseWrite_ResponseWriteData_WriteData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response_ResponseWrite_ResponseWriteData_WriteData* Response_ResponseWrite_ResponseWriteData_WriteData::default_instance_ = NULL;

Response_ResponseWrite_ResponseWriteData_WriteData* Response_ResponseWrite_ResponseWriteData_WriteData::New() const {
  return new Response_ResponseWrite_ResponseWriteData_WriteData;
}

void Response_ResponseWrite_ResponseWriteData_WriteData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    attribute_id_ = 0;
    error_number_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response_ResponseWrite_ResponseWriteData_WriteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 attribute_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attribute_id_)));
          set_has_attribute_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_error_number;
        break;
      }

      // required int32 error_number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_error_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_number_)));
          set_has_error_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response_ResponseWrite_ResponseWriteData_WriteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 attribute_id = 1;
  if (has_attribute_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attribute_id(), output);
  }

  // required int32 error_number = 2;
  if (has_error_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response_ResponseWrite_ResponseWriteData_WriteData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 attribute_id = 1;
  if (has_attribute_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attribute_id(), target);
  }

  // required int32 error_number = 2;
  if (has_error_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response_ResponseWrite_ResponseWriteData_WriteData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 attribute_id = 1;
    if (has_attribute_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attribute_id());
    }

    // required int32 error_number = 2;
    if (has_error_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ResponseWrite_ResponseWriteData_WriteData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response_ResponseWrite_ResponseWriteData_WriteData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ResponseWrite_ResponseWriteData_WriteData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ResponseWrite_ResponseWriteData_WriteData::MergeFrom(const Response_ResponseWrite_ResponseWriteData_WriteData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attribute_id()) {
      set_attribute_id(from.attribute_id());
    }
    if (from.has_error_number()) {
      set_error_number(from.error_number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response_ResponseWrite_ResponseWriteData_WriteData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ResponseWrite_ResponseWriteData_WriteData::CopyFrom(const Response_ResponseWrite_ResponseWriteData_WriteData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ResponseWrite_ResponseWriteData_WriteData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Response_ResponseWrite_ResponseWriteData_WriteData::Swap(Response_ResponseWrite_ResponseWriteData_WriteData* other) {
  if (other != this) {
    std::swap(attribute_id_, other->attribute_id_);
    std::swap(error_number_, other->error_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response_ResponseWrite_ResponseWriteData_WriteData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ResponseWrite_ResponseWriteData_WriteData_descriptor_;
  metadata.reflection = Response_ResponseWrite_ResponseWriteData_WriteData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_ResponseWrite_ResponseWriteData::kApplicationIdFieldNumber;
const int Response_ResponseWrite_ResponseWriteData::kWriteDataFieldNumber;
#endif  // !_MSC_VER

Response_ResponseWrite_ResponseWriteData::Response_ResponseWrite_ResponseWriteData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response_ResponseWrite_ResponseWriteData::InitAsDefaultInstance() {
}

Response_ResponseWrite_ResponseWriteData::Response_ResponseWrite_ResponseWriteData(const Response_ResponseWrite_ResponseWriteData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response_ResponseWrite_ResponseWriteData::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ResponseWrite_ResponseWriteData::~Response_ResponseWrite_ResponseWriteData() {
  SharedDtor();
}

void Response_ResponseWrite_ResponseWriteData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_ResponseWrite_ResponseWriteData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ResponseWrite_ResponseWriteData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseWrite_ResponseWriteData_descriptor_;
}

const Response_ResponseWrite_ResponseWriteData& Response_ResponseWrite_ResponseWriteData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response_ResponseWrite_ResponseWriteData* Response_ResponseWrite_ResponseWriteData::default_instance_ = NULL;

Response_ResponseWrite_ResponseWriteData* Response_ResponseWrite_ResponseWriteData::New() const {
  return new Response_ResponseWrite_ResponseWriteData;
}

void Response_ResponseWrite_ResponseWriteData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    application_id_ = 0;
  }
  write_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response_ResponseWrite_ResponseWriteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &application_id_)));
          set_has_application_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_write_data;
        break;
      }

      // repeated .stringdb.Response.ResponseWrite.ResponseWriteData.WriteData write_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_write_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_write_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_write_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response_ResponseWrite_ResponseWriteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->application_id(), output);
  }

  // repeated .stringdb.Response.ResponseWrite.ResponseWriteData.WriteData write_data = 21;
  for (int i = 0; i < this->write_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->write_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response_ResponseWrite_ResponseWriteData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->application_id(), target);
  }

  // repeated .stringdb.Response.ResponseWrite.ResponseWriteData.WriteData write_data = 21;
  for (int i = 0; i < this->write_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->write_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response_ResponseWrite_ResponseWriteData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->application_id());
    }

  }
  // repeated .stringdb.Response.ResponseWrite.ResponseWriteData.WriteData write_data = 21;
  total_size += 2 * this->write_data_size();
  for (int i = 0; i < this->write_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->write_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ResponseWrite_ResponseWriteData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response_ResponseWrite_ResponseWriteData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ResponseWrite_ResponseWriteData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ResponseWrite_ResponseWriteData::MergeFrom(const Response_ResponseWrite_ResponseWriteData& from) {
  GOOGLE_CHECK_NE(&from, this);
  write_data_.MergeFrom(from.write_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      set_application_id(from.application_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response_ResponseWrite_ResponseWriteData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ResponseWrite_ResponseWriteData::CopyFrom(const Response_ResponseWrite_ResponseWriteData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ResponseWrite_ResponseWriteData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < write_data_size(); i++) {
    if (!this->write_data(i).IsInitialized()) return false;
  }
  return true;
}

void Response_ResponseWrite_ResponseWriteData::Swap(Response_ResponseWrite_ResponseWriteData* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    write_data_.Swap(&other->write_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response_ResponseWrite_ResponseWriteData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ResponseWrite_ResponseWriteData_descriptor_;
  metadata.reflection = Response_ResponseWrite_ResponseWriteData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_ResponseWrite::kResponseWriteDataFieldNumber;
#endif  // !_MSC_VER

Response_ResponseWrite::Response_ResponseWrite()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response_ResponseWrite::InitAsDefaultInstance() {
  response_write_data_ = const_cast< ::stringdb::Response_ResponseWrite_ResponseWriteData*>(&::stringdb::Response_ResponseWrite_ResponseWriteData::default_instance());
}

Response_ResponseWrite::Response_ResponseWrite(const Response_ResponseWrite& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response_ResponseWrite::SharedCtor() {
  _cached_size_ = 0;
  response_write_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ResponseWrite::~Response_ResponseWrite() {
  SharedDtor();
}

void Response_ResponseWrite::SharedDtor() {
  if (this != default_instance_) {
    delete response_write_data_;
  }
}

void Response_ResponseWrite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ResponseWrite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseWrite_descriptor_;
}

const Response_ResponseWrite& Response_ResponseWrite::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response_ResponseWrite* Response_ResponseWrite::default_instance_ = NULL;

Response_ResponseWrite* Response_ResponseWrite::New() const {
  return new Response_ResponseWrite;
}

void Response_ResponseWrite::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_response_write_data()) {
      if (response_write_data_ != NULL) response_write_data_->::stringdb::Response_ResponseWrite_ResponseWriteData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response_ResponseWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .stringdb.Response.ResponseWrite.ResponseWriteData response_write_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_write_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response_ResponseWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .stringdb.Response.ResponseWrite.ResponseWriteData response_write_data = 21;
  if (has_response_write_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->response_write_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response_ResponseWrite::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .stringdb.Response.ResponseWrite.ResponseWriteData response_write_data = 21;
  if (has_response_write_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->response_write_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response_ResponseWrite::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .stringdb.Response.ResponseWrite.ResponseWriteData response_write_data = 21;
    if (has_response_write_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response_write_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ResponseWrite::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response_ResponseWrite* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ResponseWrite*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ResponseWrite::MergeFrom(const Response_ResponseWrite& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_write_data()) {
      mutable_response_write_data()->::stringdb::Response_ResponseWrite_ResponseWriteData::MergeFrom(from.response_write_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response_ResponseWrite::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ResponseWrite::CopyFrom(const Response_ResponseWrite& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ResponseWrite::IsInitialized() const {

  if (has_response_write_data()) {
    if (!this->response_write_data().IsInitialized()) return false;
  }
  return true;
}

void Response_ResponseWrite::Swap(Response_ResponseWrite* other) {
  if (other != this) {
    std::swap(response_write_data_, other->response_write_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response_ResponseWrite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ResponseWrite_descriptor_;
  metadata.reflection = Response_ResponseWrite_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response::kTypeFieldNumber;
const int Response::kResponseReadFieldNumber;
const int Response::kResponseWriteFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response::InitAsDefaultInstance() {
  response_read_ = const_cast< ::stringdb::Response_ResponseRead*>(&::stringdb::Response_ResponseRead::default_instance());
  response_write_ = const_cast< ::stringdb::Response_ResponseWrite*>(&::stringdb::Response_ResponseWrite::default_instance());
}

Response::Response(const Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  response_read_ = NULL;
  response_write_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != default_instance_) {
    delete response_read_;
    delete response_write_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stringdb_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New() const {
  return new Response;
}

void Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    if (has_response_read()) {
      if (response_read_ != NULL) response_read_->::stringdb::Response_ResponseRead::Clear();
    }
    if (has_response_write()) {
      if (response_write_ != NULL) response_write_->::stringdb::Response_ResponseWrite::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .stringdb.RequestAndResponseType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::stringdb::RequestAndResponseType_IsValid(value)) {
            set_type(static_cast< ::stringdb::RequestAndResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_response_read;
        break;
      }

      // optional .stringdb.Response.ResponseRead response_read = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response_read:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_read()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_response_write;
        break;
      }

      // optional .stringdb.Response.ResponseWrite response_write = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response_write:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_write()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .stringdb.RequestAndResponseType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .stringdb.Response.ResponseRead response_read = 21;
  if (has_response_read()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->response_read(), output);
  }

  // optional .stringdb.Response.ResponseWrite response_write = 22;
  if (has_response_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->response_write(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .stringdb.RequestAndResponseType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .stringdb.Response.ResponseRead response_read = 21;
  if (has_response_read()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->response_read(), target);
  }

  // optional .stringdb.Response.ResponseWrite response_write = 22;
  if (has_response_write()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->response_write(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .stringdb.RequestAndResponseType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .stringdb.Response.ResponseRead response_read = 21;
    if (has_response_read()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response_read());
    }

    // optional .stringdb.Response.ResponseWrite response_write = 22;
    if (has_response_write()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response_write());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_response_read()) {
      mutable_response_read()->::stringdb::Response_ResponseRead::MergeFrom(from.response_read());
    }
    if (from.has_response_write()) {
      mutable_response_write()->::stringdb::Response_ResponseWrite::MergeFrom(from.response_write());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_response_read()) {
    if (!this->response_read().IsInitialized()) return false;
  }
  if (has_response_write()) {
    if (!this->response_write().IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(response_read_, other->response_read_);
    std::swap(response_write_, other->response_write_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace stringdb

// @@protoc_insertion_point(global_scope)
